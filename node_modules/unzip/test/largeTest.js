'use strict';

var test = require('tap').test;
var fs = require('fs');
var temp = require('temp');
var dirdiff = require('dirdiff');
var streamBuffers = require('stream-buffers');
var unzip = require('../');

var archive = '/Users/eoxfeld/scrapp/testData/warning.ipa';
//var spawnedUnzip = require('child_process').spawn('unzip', ['-o', archive, '-d', '/tmp/unzip']);
//spawnedUnzip.on('exit', function(exitCode) {
  test("parse out one file from large zip", function(t) {
    var readStream = fs.createReadStream(archive);
    readStream
      .pipe(unzip.Parse())
      .on('entry', function(entry) {
        if (entry.path === 'Payload/MikeTysonGameV1.app/AllTimeLowCharacterFour-hd.plist') {
          var writableStream = new streamBuffers.WritableStreamBuffer();
          entry.pipe(writableStream);
          writableStream.on('close', function () {
            var str = writableStream.getContentsAsString('utf8');
            //todo make this async?
            var fileStr = fs.readFileSync('/tmp/unzip/Payload/MikeTysonGameV1.app/AllTimeLowCharacterFour-hd.plist', 'utf8')
            t.equal(str, fileStr);
            t.end();
          });
        }
      });
  });

  //todo fix symlinks --> otherwise dirdiff fails with 1 diff (CodeResources)
  test("extract large zip", function(t) {
    temp.mkdir('node-unzip-', function (err, dirPath) {
      if (err) {
        throw err;
      }
      var unzipExtractor = unzip.Extract({ path: dirPath });
      unzipExtractor.on('error', function(err) {
        throw err;
      });
      unzipExtractor.on('close', testExtractionResults);

      fs.createReadStream(archive).pipe(unzipExtractor);

      function testExtractionResults() {
        dirdiff('/tmp/unzip', dirPath, {
          fileContents: true
        }, function (err, diffs) {
          if (err) {
            throw err;
          }
          t.equal(diffs.length, 0, 'extracted directory contents');
          t.end();
        });
      }
    });
  });
//});
