{
  "name": "jasmine-node",
  "version": "1.0.26",
  "description": "DOM-less simple JavaScript BDD testing framework for Node",
  "homepage": [
    "http://pivotal.github.com/jasmine",
    "https://github.com/mhevery/jasmine-node"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/mhevery/jasmine-node.git"
  },
  "keywords": [
    "testing",
    "bdd"
  ],
  "author": {
    "name": "Misko Hevery",
    "email": "misko@hevery.com"
  },
  "contributors": [
    {
      "name": "Mike Swift",
      "email": "theycallmeswift@gmail.com",
      "url": "http://theycallmeswift.com"
    }
  ],
  "maintainers": "Martin HÃ¤ger <martin.haeger@gmail.com>",
  "licenses": [
    "MIT"
  ],
  "dependencies": {
    "coffee-script": ">=1.0.1",
    "jasmine-reporters": ">=0.2.0",
    "requirejs": ">=0.27.1",
    "walkdir": ">= 0.0.1",
    "underscore": ">= 1.3.1"
  },
  "bin": {
    "jasmine-node": "bin/jasmine-node"
  },
  "main": "lib/jasmine-node",
  "scripts": {
    "test": "node lib/jasmine-node/cli.js spec"
  },
  "readme": "jasmine-node\n======\n\n[![Build Status](https://secure.travis-ci.org/spaghetticode/jasmine-node.png)](http://travis-ci.org/spaghetticode/jasmine-node)\n\nThis node.js module makes the wonderful Pivotal Lab's jasmine\n(http://github.com/pivotal/jasmine) spec framework available in\nnode.js.\n\ninstall\n------\n    npm install jasmine-node -g\n\nusage\n------\n\nWrite the specifications for your code in *.js and *.coffee files in the\nspec/ directory (note: your specification files must end with either\n.spec.js or .spec.coffee; otherwise jasmine-node won't find them!). You\ncan use sub-directories to better organise your specs.\n\nIf you have installed the npm package, you can run it with:\n\n    jasmine-node\n\nIf you aren't using npm, you should add `pwd`/lib to the $NODE_PATH\nenvironment variable, then run:\n\n    node lib/jasmine-node/cli.js\n\n\nYou can supply the following arguments:\n\n  * <code>--autotest</code>, provides automatic execution of specs after\n    each changes\n  * <code>--coffee</code>, allow execution of .coffee specs\n  * <code>--color</code>, indicates spec output should uses color to\nindicates passing (green) or failing (red) specs\n  * <code>--noColor</code>, do not use color in the output\n  * <code>--verbose</code>, verbose output as the specs are run\n  * <code>--junitreport</code>, export tests results as junitreport xml format'\n\nCheckout spec/SampleSpecs.js to see how to use it.\n\nasync tests\n-----------\n\njasmine-node includes an alternate syntax for writing asynchronous tests. Accepting\na done callback in the specification will trigger jasmine-node to run the test\nasynchronously waiting until the done() callback is called.\n\n```javascript\n    it(\"should respond with hello world\", function(done) {\n      request(\"http://localhost:3000/hello\", function(error, response, body){\n        expect(body).toEqual(\"hello world\");\n        done();\n      });\n    });\n```\n\nAn asynchronous test will fail after 5000 ms if done() is not called. This timeout\ncan be changed by setting jasmine.DEFAULT_TIMEOUT_INTERVAL or by passing a timeout\ninterval in the specification.\n\n    it(\"should respond with hello world\", function(done) {\n      request(\"http://localhost:3000/hello\", function(error, response, body){\n        done();\n      }, 250);  // timeout after 250 ms\n    });\n\ndevelopment\n-----------\nInstall the dependent packages by running:\n\n    npm install\n\nRun the specs before you send your pull request:\n\n    scripts/specs\n\nor\n\n    scripts/specs --verbose\n",
  "_id": "jasmine-node@1.0.26",
  "dist": {
    "shasum": "b9f034445c3ad25bf08863c9f692d53afc0483ba"
  },
  "_from": "jasmine-node"
}
